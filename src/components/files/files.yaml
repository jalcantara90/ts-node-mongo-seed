components:
  schemas:
    Files:
      required:
        - name
        - path
        - mimeType
      type: object
      properties:
        _id:
          type: string
        originalName:
          type: string
        name:
          type: string
        path:
          type: string
        mimeType:
          type: string
        encoding:
          type: string

path:
  /files/:
    get:
      tags:
        - File
      summary: Get all Files
      description: Return list of all files
      responses:
        200:
          description: list of all files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
    post:
      tags:
        - File
      summary: create file
      description: create file
      requestBody:
        description: New file to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Files'
      responses:
        200:
          description: create file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'

  /files/{fileId}:
    get:
      tags:
        - File
      summary: Get File
      description: Return file info
      parameters:
        - name: fileId
          in: path
          description: File id
          required: true
          schema:
            type: string
      responses:
        200:
          description: list file info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
    delete:
      tags:
        - File
      summary: delete file
      description: delete file
      parameters:
        - name: fileId
          in: path
          description: File id
          required: true
          schema:
            type: string
      responses:
        200:
          description: delete file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'

  /files/upload/:
    post:
      tags:
        - File
      summary: Uploads a file.
      consumes:
        - multipart/form-data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: file
                  format: binary
      responses:
        200:
          description: created files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'

  /files/download/{fileId}:
    get:
      tags:
        - File
      summary: Download file
      description: Return file 
      parameters:
        - name: fileId
          in: path
          description: File id
          required: true
          schema:
            type: string
      responses:
        200:
            description: client receive file
            content:
                multipart/form-data:
                  schema:
                    type: file
                    format: binary
  /files/zip/{zipName}:
    get:
      tags:
        - File
      summary: Get File
      description: Return file 
      parameters:
        - in: path
          name: zipName
          description: name of zip
          required: true
          schema:
            type: string
        - in: query
          name: fileId
          description: id of file to compose zip
          required: false
          schema:
            type: array
            items:
              type: string 
      responses:
        200:
            description: client receive zip compose it with requested files
            content:
                multipart/form-data:
                  schema:
                    type: file
                    format: binary


